CCS PCM C Compiler, Version 5.049, 5967               09-dic.-21 23:51

               Filename:   D:\Electronica\Pic\Project with CCS C Compiler\Interrupciones\interrupciones.lst

               ROM used:   177 words (2%)
                           Largest free fragment is 2048
               RAM used:   27 (7%) at main() level
                           30 (8%) worst case
               Stack used: 0 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   060
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  BCF    03.7
0016:  BCF    03.5
0017:  BTFSS  0B.4
0018:  GOTO   01B
0019:  BTFSC  0B.1
001A:  GOTO   02C
001B:  MOVF   22,W
001C:  MOVWF  04
001D:  MOVF   23,W
001E:  MOVWF  77
001F:  MOVF   24,W
0020:  MOVWF  78
0021:  MOVF   25,W
0022:  MOVWF  79
0023:  MOVF   26,W
0024:  MOVWF  7A
0025:  MOVF   20,W
0026:  MOVWF  0A
0027:  SWAPF  21,W
0028:  MOVWF  03
0029:  SWAPF  7F,F
002A:  SWAPF  7F,W
002B:  RETFIE
002C:  BCF    0A.3
002D:  BCF    0A.4
002E:  GOTO   043
.................... #include <interrupciones.h> 
.................... #include <16F877A.h> 
.................... //////////// Standard Header file for the PIC16F877A device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2014 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877A 
....................  
.................... #list 
....................  
.................... #device ADC=10 
.................... #use delay(crystal=20000000) 
002F:  MOVLW  38
0030:  MOVWF  04
0031:  BCF    03.7
0032:  MOVF   00,W
0033:  BTFSC  03.2
0034:  GOTO   042
0035:  MOVLW  06
0036:  MOVWF  78
0037:  CLRF   77
0038:  DECFSZ 77,F
0039:  GOTO   038
003A:  DECFSZ 78,F
003B:  GOTO   037
003C:  MOVLW  7B
003D:  MOVWF  77
003E:  DECFSZ 77,F
003F:  GOTO   03E
0040:  DECFSZ 00,F
0041:  GOTO   035
0042:  RETURN
....................  
....................  
.................... #fuses HS, NOWDT, NOPUT, NOLVP, NOPROTECT, BROWNOUT 
.................... #use fast_io(B) 
.................... #use standard_io(C) 
.................... #use fast_io(D) 
....................  
.................... int display[10] = {0x3f, 0x06, 0x5b, 0x4f, 0x66, 0x6d, 0x7d, 0x07, 0x7f, 0x6f};  //catodo comun 
*
006D:  MOVLW  3F
006E:  BCF    03.5
006F:  MOVWF  29
0070:  MOVLW  06
0071:  MOVWF  2A
0072:  MOVLW  5B
0073:  MOVWF  2B
0074:  MOVLW  4F
0075:  MOVWF  2C
0076:  MOVLW  66
0077:  MOVWF  2D
0078:  MOVLW  6D
0079:  MOVWF  2E
007A:  MOVLW  7D
007B:  MOVWF  2F
007C:  MOVLW  07
007D:  MOVWF  30
007E:  MOVLW  7F
007F:  MOVWF  31
0080:  MOVLW  6F
0081:  MOVWF  32
.................... int contador; 
....................  
.................... #INT_EXT 
.................... void interruccion_RB0(){ 
.................... 	for (int i = 0; i < 5; ++i) 
*
0043:  CLRF   37
0044:  MOVF   37,W
0045:  SUBLW  04
0046:  BTFSS  03.0
0047:  GOTO   05C
.................... 	{ 
.................... 		output_high(PIN_C0); 
0048:  BCF    28.0
0049:  MOVF   28,W
004A:  BSF    03.5
004B:  MOVWF  07
004C:  BCF    03.5
004D:  BSF    07.0
.................... 		delay_ms(200); 
004E:  MOVLW  C8
004F:  MOVWF  38
0050:  CALL   02F
.................... 		output_low(PIN_C0); 
0051:  BCF    28.0
0052:  MOVF   28,W
0053:  BSF    03.5
0054:  MOVWF  07
0055:  BCF    03.5
0056:  BCF    07.0
.................... 		delay_ms(200); 
0057:  MOVLW  C8
0058:  MOVWF  38
0059:  CALL   02F
005A:  INCF   37,F
005B:  GOTO   044
.................... 	} 
005C:  BCF    0B.1
005D:  BCF    0A.3
005E:  BCF    0A.4
005F:  GOTO   01B
.................... }  
....................  
.................... void main() 
0060:  MOVF   03,W
0061:  ANDLW  1F
0062:  MOVWF  03
0063:  MOVLW  FF
0064:  MOVWF  28
0065:  BSF    03.5
0066:  BSF    1F.0
0067:  BSF    1F.1
0068:  BSF    1F.2
0069:  BCF    1F.3
006A:  MOVLW  07
006B:  MOVWF  1C
006C:  BCF    03.7
.................... { 
....................  
.................... 	set_tris_b(0xff); 
*
0082:  MOVLW  FF
0083:  BSF    03.5
0084:  MOVWF  06
.................... 	set_tris_d(0x00); 
0085:  MOVLW  00
0086:  MOVWF  08
.................... 	enable_interrupts(INT_EXT); 
0087:  BCF    03.5
0088:  BSF    0B.4
.................... 	ext_int_edge(L_TO_H); 
0089:  BSF    03.5
008A:  BSF    01.6
.................... 	enable_interrupts(GLOBAL); 
008B:  MOVLW  C0
008C:  BCF    03.5
008D:  IORWF  0B,F
.................... 	output_low(PIN_C0); 
008E:  BCF    28.0
008F:  MOVF   28,W
0090:  BSF    03.5
0091:  MOVWF  07
0092:  BCF    03.5
0093:  BCF    07.0
....................  
.................... 	while(TRUE) 
.................... 	{ 
....................  
.................... 		for (int contador = 0; contador < 10; contador++) 
0094:  CLRF   34
0095:  MOVF   34,W
0096:  SUBLW  09
0097:  BTFSS  03.0
0098:  GOTO   0AF
.................... 		{ 
.................... 			output_d(display[contador]); 
0099:  MOVLW  29
009A:  ADDWF  34,W
009B:  MOVWF  04
009C:  BCF    03.7
009D:  MOVF   00,W
009E:  MOVWF  35
009F:  MOVWF  08
.................... 			delay_ms(500); 
00A0:  MOVLW  02
00A1:  MOVWF  35
00A2:  CLRF   27
00A3:  BTFSC  0B.7
00A4:  BSF    27.7
00A5:  BCF    0B.7
00A6:  MOVLW  FA
00A7:  MOVWF  38
00A8:  CALL   02F
00A9:  BTFSC  27.7
00AA:  BSF    0B.7
00AB:  DECFSZ 35,F
00AC:  GOTO   0A2
00AD:  INCF   34,F
00AE:  GOTO   095
.................... 		} 
00AF:  GOTO   094
.................... 	} 
....................  
.................... } 
00B0:  SLEEP

Configuration Fuses:
   Word  1: 2F4A   HS NOWDT NOPUT BROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
