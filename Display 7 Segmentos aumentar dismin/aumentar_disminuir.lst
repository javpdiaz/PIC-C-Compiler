CCS PCM C Compiler, Version 5.049, 5967               29-nov.-21 21:12

               Filename:   D:\Electronica\Pic\Project with CCS C Compiler\Display 7 Segmentos aumentar dismin\aumentar_disminuir.lst

               ROM used:   125 words (12%)
                           Largest free fragment is 899
               RAM used:   17 (8%) at main() level
                           17 (8%) worst case
               Stack used: 0 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   018
0003:  NOP
.................... #include <aumentar_disminuir.h> 
.................... #include <16F627A.h> 
.................... //////////// Standard Header file for the PIC16F627A device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2014 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F627A 
....................  
.................... #list 
....................  
.................... #use delay(crystal=20000000) 
....................  
....................  
.................... #fuses HS, NOWDT, NOPUT, NOLVP, NOPROTECT, BROWNOUT 
.................... #use delay(clock = 20M) 
0004:  MOVLW  2B
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   017
000A:  MOVLW  06
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  7B
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  DECFSZ 00,F
0016:  GOTO   00A
0017:  RETURN
....................  
.................... #use standard_io(A) 
.................... #use fast_io(B) 
....................  
.................... #define pulsadorASC PIN_A0 
.................... #define pulsadorDES PIN_A1 
....................  
.................... int display[10] = {0x3f, 0x06, 0x5b, 0x4f, 0x66, 0x6d, 0x7d, 0x07, 0x7f, 0x6f}; 
*
001E:  MOVLW  3F
001F:  MOVWF  20
0020:  MOVLW  06
0021:  MOVWF  21
0022:  MOVLW  5B
0023:  MOVWF  22
0024:  MOVLW  4F
0025:  MOVWF  23
0026:  MOVLW  66
0027:  MOVWF  24
0028:  MOVLW  6D
0029:  MOVWF  25
002A:  MOVLW  7D
002B:  MOVWF  26
002C:  MOVLW  07
002D:  MOVWF  27
002E:  MOVLW  7F
002F:  MOVWF  28
0030:  MOVLW  6F
0031:  MOVWF  29
.................... int contador; 
....................  
.................... void main() 
*
0018:  MOVF   03,W
0019:  ANDLW  1F
001A:  MOVWF  03
001B:  MOVLW  07
001C:  MOVWF  1F
001D:  BCF    03.7
.................... { 
....................  
....................    set_tris_b(0x00); 
*
0032:  MOVLW  00
0033:  BSF    03.5
0034:  MOVWF  06
....................    output_b(display[0]); //para mostrar el numero cero al inicio 
0035:  BCF    03.5
0036:  MOVF   20,W
0037:  MOVWF  06
....................  
....................    while(TRUE) 
....................    { 
....................       if (input(pulsadorASC) == 1) 
0038:  BSF    03.5
0039:  BSF    05.0
003A:  BCF    03.5
003B:  BTFSS  05.0
003C:  GOTO   05A
....................       { 
....................          while(input(pulsadorASC) == 1);  //antirrebote 
003D:  BSF    03.5
003E:  BSF    05.0
003F:  BCF    03.5
0040:  BTFSC  05.0
0041:  GOTO   03D
....................          delay_ms(10);  //antirrebote 
0042:  MOVLW  0A
0043:  MOVWF  2B
0044:  CALL   004
....................           
....................          contador++; 
0045:  INCF   2A,F
....................          output_b(display[contador]); 
0046:  MOVLW  20
0047:  ADDWF  2A,W
0048:  MOVWF  04
0049:  BCF    03.7
004A:  MOVF   00,W
004B:  MOVWF  2B
004C:  MOVWF  06
....................  
....................          if (contador > 9) 
004D:  MOVF   2A,W
004E:  SUBLW  09
004F:  BTFSC  03.0
0050:  GOTO   05A
....................          { 
....................             contador = 9; 
0051:  MOVLW  09
0052:  MOVWF  2A
....................             output_b(display[contador]); 
0053:  MOVLW  20
0054:  ADDWF  2A,W
0055:  MOVWF  04
0056:  BCF    03.7
0057:  MOVF   00,W
0058:  MOVWF  2B
0059:  MOVWF  06
....................          } 
....................       } 
....................  
....................       if (input(pulsadorDES) == 1) 
005A:  BSF    03.5
005B:  BSF    05.1
005C:  BCF    03.5
005D:  BTFSS  05.1
005E:  GOTO   07B
....................       { 
....................          while(input(pulsadorDES) == 1); //antirrebote 
005F:  BSF    03.5
0060:  BSF    05.1
0061:  BCF    03.5
0062:  BTFSC  05.1
0063:  GOTO   05F
....................          delay_ms(10);  //antirrebote 
0064:  MOVLW  0A
0065:  MOVWF  2B
0066:  CALL   004
....................  
....................          contador--; 
0067:  DECF   2A,F
....................          output_b(display[contador]); 
0068:  MOVLW  20
0069:  ADDWF  2A,W
006A:  MOVWF  04
006B:  BCF    03.7
006C:  MOVF   00,W
006D:  MOVWF  2B
006E:  MOVWF  06
....................  
....................          if (contador == -1) 
006F:  MOVF   2A,W
0070:  SUBLW  FF
0071:  BTFSS  03.2
0072:  GOTO   07B
....................          { 
....................             contador = 0; 
0073:  CLRF   2A
....................             output_b(display[contador]); 
0074:  MOVLW  20
0075:  ADDWF  2A,W
0076:  MOVWF  04
0077:  BCF    03.7
0078:  MOVF   00,W
0079:  MOVWF  2B
007A:  MOVWF  06
....................          } 
....................       } 
007B:  GOTO   038
....................    } 
....................  
.................... } 
007C:  SLEEP

Configuration Fuses:
   Word  1: 216A   NOWDT NOPUT HS MCLR BROWNOUT NOLVP NOCPD NOPROTECT
