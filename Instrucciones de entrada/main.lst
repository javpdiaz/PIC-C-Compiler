CCS PCM C Compiler, Version 5.049, 5967               26-nov.-21 21:44

               Filename:   D:\Electronica\Pic\Project with CCS C Compiler\Instrucciones de entrada\main.lst

               ROM used:   30 words (3%)
                           Largest free fragment is 994
               RAM used:   6 (3%) at main() level
                           6 (3%) worst case
               Stack used: 0 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   004
0003:  NOP
.................... #include <main.h> 
.................... #include <16F627A.h> 
.................... //////////// Standard Header file for the PIC16F627A device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2014 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F627A 
....................  
.................... #list 
....................  
.................... #use delay(crystal=20000000) 
....................  
....................  
.................... #fuses HS, NOWDT, NOPUT, NOLVP, NOPROTECT, BROWNOUT 
.................... #use delay(clock = 20M) 
....................  
.................... #use fast_io(A) 
.................... #use standard_io(B) 
....................  
.................... void main() 
0004:  MOVF   03,W
0005:  ANDLW  1F
0006:  MOVWF  03
0007:  MOVLW  07
0008:  MOVWF  1F
0009:  BCF    03.7
.................... { 
....................  
....................    set_tris_a(0xff); //todo el puerto B puesto a entrada. 
000A:  MOVLW  FF
000B:  BSF    03.5
000C:  MOVWF  05
....................    output_low(PIN_B0); //el pin donde va conectado el led se inicializa bajo. 
000D:  BCF    06.0
000E:  BCF    03.5
000F:  BCF    06.0
....................  
....................    while(TRUE) 
....................    { 
....................  
....................       if(input(PIN_A0) == 1) 
0010:  BTFSS  05.0
0011:  GOTO   016
....................       { 
....................          output_high(PIN_B0);          
0012:  BSF    03.5
0013:  BCF    06.0
0014:  BCF    03.5
0015:  BSF    06.0
....................       } 
....................       if(input(PIN_A1) == 1) 
0016:  BTFSS  05.1
0017:  GOTO   01C
....................       { 
....................          output_low(PIN_B0); 
0018:  BSF    03.5
0019:  BCF    06.0
001A:  BCF    03.5
001B:  BCF    06.0
....................       } 
001C:  GOTO   010
....................        
....................    } 
....................  
.................... } 
001D:  SLEEP

Configuration Fuses:
   Word  1: 216A   NOWDT NOPUT HS MCLR BROWNOUT NOLVP NOCPD NOPROTECT
