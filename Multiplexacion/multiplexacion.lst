CCS PCM C Compiler, Version 5.049, 5967               29-nov.-21 21:59

               Filename:   D:\Electronica\Pic\Project with CCS C Compiler\Multiplexacion\multiplexacion.lst

               ROM used:   81 words (8%)
                           Largest free fragment is 943
               RAM used:   15 (7%) at main() level
                           16 (7%) worst case
               Stack used: 0 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   018
0003:  NOP
.................... #include <multiplexacion.h> 
.................... #include <16F627A.h> 
.................... //////////// Standard Header file for the PIC16F627A device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2014 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F627A 
....................  
.................... #list 
....................  
.................... #use delay(crystal=20000000) 
0004:  MOVLW  2A
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   017
000A:  MOVLW  06
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  7B
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  DECFSZ 00,F
0016:  GOTO   00A
0017:  RETURN
....................  
....................  
....................  
.................... #use standard_io(A) 
.................... #use fast_io(B) 
....................  
.................... #define displayTransistor1 PIN_A0 
.................... #define displayTransistor2 PIN_A1 
....................  
.................... int display[10] = {0x3f, 0x06, 0x5b, 0x4f, 0x66, 0x6d, 0x7d, 0x07, 0x7f, 0x6f};  //c√°todo comun 
*
001E:  MOVLW  3F
001F:  MOVWF  20
0020:  MOVLW  06
0021:  MOVWF  21
0022:  MOVLW  5B
0023:  MOVWF  22
0024:  MOVLW  4F
0025:  MOVWF  23
0026:  MOVLW  66
0027:  MOVWF  24
0028:  MOVLW  6D
0029:  MOVWF  25
002A:  MOVLW  7D
002B:  MOVWF  26
002C:  MOVLW  07
002D:  MOVWF  27
002E:  MOVLW  7F
002F:  MOVWF  28
0030:  MOVLW  6F
0031:  MOVWF  29
....................  
.................... void main() 
*
0018:  MOVF   03,W
0019:  ANDLW  1F
001A:  MOVWF  03
001B:  MOVLW  07
001C:  MOVWF  1F
001D:  BCF    03.7
.................... { 
....................    set_tris_b(0x00); //Puerto B como salida 
*
0032:  MOVLW  00
0033:  BSF    03.5
0034:  MOVWF  06
....................  
....................    while(TRUE) 
....................    { 
....................       output_high(displayTransistor1); //Se activa el transistor 1  
0035:  BCF    05.0
0036:  BCF    03.5
0037:  BSF    05.0
....................       output_low(displayTransistor2);  //Se desactiva el transistor 2 
0038:  BSF    03.5
0039:  BCF    05.1
003A:  BCF    03.5
003B:  BCF    05.1
....................       output_b(display[2]);  //Se muestra el numero "2" 
003C:  MOVF   22,W
003D:  MOVWF  06
....................       delay_ms(5); 
003E:  MOVLW  05
003F:  MOVWF  2A
0040:  CALL   004
....................  
....................       output_low(displayTransistor1);  //Se desactiva el transistor 1 
0041:  BSF    03.5
0042:  BCF    05.0
0043:  BCF    03.5
0044:  BCF    05.0
....................       output_high(displayTransistor2);  //Se activa el transistor 2 
0045:  BSF    03.5
0046:  BCF    05.1
0047:  BCF    03.5
0048:  BSF    05.1
....................       output_b(display[1]);  //Se muestra el numero "1" 
0049:  MOVF   21,W
004A:  MOVWF  06
....................       delay_ms(5); 
004B:  MOVLW  05
004C:  MOVWF  2A
004D:  CALL   004
004E:  BSF    03.5
004F:  GOTO   035
....................    } 
....................  
.................... } 
0050:  SLEEP

Configuration Fuses:
   Word  1: 2162   NOWDT PUT HS MCLR BROWNOUT NOLVP NOCPD NOPROTECT
